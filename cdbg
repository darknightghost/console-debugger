#! /usr/bin/python3
# -*- coding: utf-8 -*-

'''
      Copyright 2016,暗夜幽灵 <darknightghost.cn@gmail.com>

      This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    at your option) any later version.

      This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

      You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
'''

import ui
from ui.MainWorkspace import MainWorkspace
import adapters
import sys
import os
import log
import traceback
from config.config import Config
from adapters import *

def main(argv):
    #Analyse parameters
    if len(argv) < 2:
        usage(argv[0])
        return 0

    i = 1
    param_dict = {}
    while i < len(argv):
        if argv[i][0] == "-":
            i = analyse_param(argv[i][1 :], param_dict, i, argv)
        else:
            analyse_target(param_dict, i, argv) 
            break

    if "h" in param_dict.keys():
        #Show help
        return 0
    
    if "w" not in param_dict.keys() and "a" not in param_dict.keys():
        usage()
        return -1

    if "-debug" in  param_dict.keys():
        #Enable logging
        log.logging_on()

    #Load adapter
    cfg = None
    if "w" in param_dict.keys():
        try:
            cfg = Config(path = param_dict["w"])
            if (not cfg.has_key("views")) \
                    or (not cfg.has_key("plugins")) \
                    or (not cfg.has_key("adapter")):
                print("Unspecify workspace file \"%s\"."%(param_dict["w"]))
                return -1

        except IOError:
            print("Unable to open workspace \"%s\"."%(param_dict["w"]))
            return -1

    else:
        cfg = Config()
        cfg.add_key("views")
        cfg.add_key("plugins")
        cfg.add_key("adapter")

    adapter = adapters.load_adapter(cfg, param_dict)
    if adapter == None:
        return -1

    #Load ui
    tui = MainWorkspace(adapter, param_dict, cfg)

    ret = tui.winmain()
    adapters.get_adapter_list()

    return ret

def usage(filename):
    print("Usage:\n" 
          "\t %s adapter_parameters -a adapter target args"%(filename))
    print("\t %s -w workspace\n"%(filename))
    print("Installed adapters:");

    #Show installed adapters
    adapter_list = adapters.get_adapter_list()
    for t in adapter_list:
        print("\t%s"%(t))

    print("\nUse \"%s -h adapter\" to show help of adapter."%(filename));
    print("\nUse \"%--debug option\" to enable logging."%(filename));
    return

def analyse_param(key, param_dict, index, argv):
    try:
        if argv[index + 1][0] != "-":
            param_dict[key] = argv[index + 1]
            return index + 2
    except IndexError:
        pass

    param_dict[key] = ""
    return index + 1

def analyse_target(param_dict, index, argv):
    cmdline = []
    while index < len(argv):
        cmdline.append(argv[index])
        index = index + 1
    param_dict["target"] = cmdline
    return

try:
    ret = main(sys.argv)

except Exception:
    log.debug_log(traceback.format_exc())
    traceback.print_exc()
    ret = -1

exit(ret)

